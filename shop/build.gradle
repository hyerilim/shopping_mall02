buildscript {
   ext {
      queryDslVersion = '5.0.0'
   }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	
	   //querydsl 추가
   	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// .jsp 사용 위해
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	
	// security dependency 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jstl 라이브러리 추가
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'
	
	//modelmapper라이브러리
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'
	
	//파라미터 값 검증
	implementation 'org.springframework.boot:spring-boot-starter-validation'

   //querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslSrcDir = 'src/main/generated'
querydsl{
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}
sourceSets{
	main{
		java{
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

// 이 부분이 추가. 
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}